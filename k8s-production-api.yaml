# Kubernetes Deployment for Fitness AI API - Day 3 ECR Integration
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fitness-ai-api
  namespace: default
  labels:
    app: fitness-ai-api
    version: v1.0.0
    component: api
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: fitness-ai-api
  template:
    metadata:
      labels:
        app: fitness-ai-api
        version: v1.0.0
    spec:
      containers:
      - name: fitness-ai-api
        # ECR image - update this with your AWS account ID
        image: ACCOUNT_ID.dkr.ecr.us-east-1.amazonaws.com/fitness-ai-api:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
          name: http
          protocol: TCP
        env:
        - name: ENVIRONMENT
          value: "production"
        - name: DEBUG
          value: "false"
        - name: LOG_LEVEL
          value: "INFO"
        - name: HOST
          value: "0.0.0.0"
        - name: PORT
          value: "8000"
        - name: WORKERS
          value: "1"
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: fitness-api-secrets
              key: jwt-secret-key
        - name: MODEL_PATH
          value: "./ai_models/mistral-7b-instruct"
        - name: MODEL_NAME
          value: "mistralai/Mistral-7B-Instruct-v0.3"
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health/live
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health/ready
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 5
          failureThreshold: 2
        # Note: Removed volume mounts for Day 3 - AI models will be mock/built-in

---
apiVersion: v1
kind: Service
metadata:
  name: fitness-ai-api-service
  labels:
    app: fitness-ai-api
    component: api
spec:
  selector:
    app: fitness-ai-api
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: 8000
  type: ClusterIP

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: fitness-ai-api-ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "false"  # Disabled for Day 3 testing
spec:
  rules:
  - host: fitness-api.local  # Local testing host
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: fitness-ai-api-service
            port:
              number: 80

---
apiVersion: v1
kind: Secret
metadata:
  name: fitness-api-secrets
type: Opaque
stringData:
  jwt-secret-key: "dev-test-secret-key-for-jwt-tokens-k8s"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: fitness-api-config
data:
  ENVIRONMENT: "production"
  DEBUG: "false"
  LOG_LEVEL: "INFO"
  HOST: "0.0.0.0"
  PORT: "8000"
  WORKERS: "1"
  MODEL_PATH: "./ai_models/mistral-7b-instruct"
  MODEL_NAME: "mistralai/Mistral-7B-Instruct-v0.3"

# Note: Removed PVC for Day 3 - using built-in models
# Future: Add PVC for actual AI model storage