# Kubernetes Deployment for FitPub Production API
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fitpub-api
  namespace: default
  labels:
    app: fitpub-api
    version: v1.0.0
spec:
  replicas: 3
  selector:
    matchLabels:
      app: fitpub-api
  template:
    metadata:
      labels:
        app: fitpub-api
    spec:
      containers:
      - name: fitpub-api
        image: fitpub-api:latest
        ports:
        - containerPort: 8000
        env:
        - name: ENVIRONMENT
          value: "production"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: fitpub-secrets
              key: database-url
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: fitpub-secrets
              key: jwt-secret-key
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: fitpub-secrets
              key: redis-url
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
        volumeMounts:
        - name: model-storage
          mountPath: /app/models
      volumes:
      - name: model-storage
        persistentVolumeClaim:
          claimName: model-storage-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: fitpub-api-service
  labels:
    app: fitpub-api
spec:
  selector:
    app: fitpub-api
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8000
  type: ClusterIP

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: fitpub-api-ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
  - hosts:
    - api.fitpub.ai
    secretName: fitpub-api-tls
  rules:
  - host: api.fitpub.ai
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: fitpub-api-service
            port:
              number: 80

---
apiVersion: v1
kind: Secret
metadata:
  name: fitpub-secrets
type: Opaque
stringData:
  database-url: "postgresql://fitpub:password@postgres-service:5432/fitpub_db"
  jwt-secret-key: "your-super-secret-jwt-key-change-this-in-production"
  redis-url: "redis://redis-service:6379/0"

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: model-storage-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
  storageClassName: gp2