# Docker Compose for FastAPI Application - Day 3 Container Registry
version: '3.8'

services:
  # FastAPI Application
  fitness-ai-api:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: fitness-ai-api
    ports:
      - "8000:8000"
    environment:
      - SECRET_KEY=dev-test-secret-key-for-jwt-tokens-docker
      - DEBUG=false
      - ENVIRONMENT=development
      - LOG_LEVEL=INFO
      - HOST=0.0.0.0
      - PORT=8000
      - WORKERS=1
      - MODEL_PATH=./ai_models/mistral-7b-instruct
      - MODEL_NAME=mistralai/Mistral-7B-Instruct-v0.3
    networks:
      - fitness-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    volumes:
      - ./logs:/app/logs:rw
      - ./ai_models:/app/ai_models:ro

  # PostgreSQL Database (Optional - for future use)
  postgres:
    image: postgres:15-alpine
    container_name: fitness-postgres
    environment:
      POSTGRES_USER: fitness
      POSTGRES_PASSWORD: fitness123
      POSTGRES_DB: fitness_db
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --locale=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - fitness-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U fitness"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    profiles:
      - database

  # Redis Cache (Optional - for future use)
  redis:
    image: redis:7-alpine
    container_name: fitness-redis
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - fitness-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    restart: unless-stopped
    profiles:
      - cache

networks:
  fitness-network:
    driver: bridge
    name: fitness-network

volumes:
  postgres_data:
    name: fitness_postgres_data
  redis_data:
    name: fitness_redis_data