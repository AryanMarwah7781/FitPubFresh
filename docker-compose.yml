# Docker Compose for Local Development
version: '3.8'

services:
  # FastAPI Application
  fitpub-api:
    build:
      context: .
      dockerfile: Dockerfile.production
    ports:
      - "8000:8000"
    environment:
      - DEBUG=true
      - ENVIRONMENT=development
      - DATABASE_URL=postgresql://fitpub:fitpub123@postgres:5432/fitpub_db
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=dev-secret-key-change-for-production
    volumes:
      - ./models:/app/models
      - ./.env:/app/.env
    depends_on:
      - postgres
      - redis
    networks:
      - fitpub-network

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=fitpub_db
      - POSTGRES_USER=fitpub
      - POSTGRES_PASSWORD=fitpub123
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db_init:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - fitpub-network

  # Redis for Caching
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - fitpub-network

  # pgAdmin for Database Management
  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@fitpub.ai
      - PGADMIN_DEFAULT_PASSWORD=admin123
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - fitpub-network

  # Prometheus for Monitoring
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    networks:
      - fitpub-network

networks:
  fitpub-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data: